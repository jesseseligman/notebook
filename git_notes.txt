# initialize a git repository
#  create a .git folder in the current working directory
git init

# look at the staging area
# files can be
# -tracked
# -untracked
# committed (no longer in staging area)
git status

# adds changes in a file to the staging area
git add <file>

# take a look at the commits area
git log

# short form alias for git log
git ll

# long form alias for git log
# only command that shows the changes
git la

# adds my signature globally (for all repositories) in this environment
git config --global user.name "NAME"
git config --global user.email "EMAIL"

#commits the changes in the staging area to the commits area
#cleans out the staging area (prepares it for next commit)
git commit -m 'MESSAGE'

# creates a special file that acts as the bouncer to the staging area
# paths to be ignored are line-separated
# this file is allowed into the party
touch .gitignore

# push the current branch (master) to a branch (also master) on the origin remote
# the first master refers to the local branch
# the second master refers to the remote branch
# the -u flag sets the upstream (connects the two branches)
~/P/g/w/notebook master ✔ git push -u origin master

# add a remote called origin (key) that refers to a URL (value)
# allows you to push (and pull) commits to and from the remote
git remote add origin URL

# once the local master branch is connected to a remote branch, you don't need to specify the remote or branch names
~/P/g/w/notebook master ✔ git push

# also shows the commit log of the local and remote branches
git ll

# fetches new commits from the remote branch and merges them into the local master branch
~/P/g/w/notebook master ✔ git pul [REMOTE] [BRANCH]
